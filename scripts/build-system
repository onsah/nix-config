#!/usr/bin/env nu

use std assert

def main [
  device_path: string, # Path for the system configuration. Must contain a 'configuration.nix' and an 'npins' directory.
  command: string = "switch", # Main command for 'nixos-rebuild'. 'switch' or 'dry-run'
  ...extra_args: string, # Passed to 'nixos-rebuild'
] {

  assert_dir $device_path;

  cd $env.PROJECT_ROOT;

  let abs_device_path = ($device_path | path expand --strict);
  let npins_path = ($abs_device_path | path join npins default.nix);
  let configuration_path = ($abs_device_path | path join configuration.nix);

  let nixpkgs_pin = run-external "nix" "eval" "--raw" "-f" $npins_path "nixpkgs";
  let nix_path = $"nixpkgs=($nixpkgs_pin):nixos-config=($configuration_path)";

  with-env {
    NIX_PATH: $nix_path,
  } {
    # For some reason '--preserve-env=NIX_PATH' doesn't pass the env variable.
    sudo "--preserve-env" "-u" $"(whoami)" "nixos-rebuild" $command "--fast" ...$extra_args
  }
}

def assert_dir [path: string] {
  assert ($path | path exists) $"path '($path)' doesn't exit";
  assert (($path | path type) == "dir") $"path ($path) is not a directory";
}
